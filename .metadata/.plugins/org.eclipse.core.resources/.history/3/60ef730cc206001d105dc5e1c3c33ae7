package chess;

import boardgame.Board;
import boardgame.Piece;
import boardgame.Position;

public abstract class ChessPiece extends Piece {

	private Color color;
	private int moveCount;

	public ChessPiece(Board board, Color color) {
		super(board);
		this.color = color;
	}

	public Color getColor() {
		return color;
	}
	
	public void increaseMoveCount() {
		moveCount++;
	}
	
	public ChessPosition getChessPosition() {
		return ChessPosition.fromPosition(position); // position da classse Piece, convertendo pra classe chessPosition
	}
	
	protected boolean isThereOpponentPiece(Position position) { // protected pq queremos que ela seja acessível somente por este pacote e pelas subclasses (peças);
		ChessPiece p = (ChessPiece)getBoard().piece(position); // downcasting p chesspiece p identificar;
		return p != null && p.getColor() != color;
	}	
}